import{i as o}from"./index-DFyuifyJ.js";const i=async()=>{try{return(await o.get("/orders/user")).data}catch(r){throw console.error("Error fetching user orders:",r),r}},p=async()=>{try{return(await o.get("/orders")).data}catch(r){throw console.error("Error fetching all orders:",r),r}},l=async r=>{try{return(await o.get(`/orders/${r}`)).data}catch(e){throw console.error("Error fetching order:",e),e}},u=async r=>{var e,t,a,n;try{console.log("Creating order with data:",r);const s={_id:"mock_"+Date.now(),user:r.userId||"user123",items:r.items,shippingDetails:r.shippingDetails,totalAmount:r.totalAmount,paymentMethod:r.paymentMethod,status:"pending",createdAt:new Date().toISOString()};try{return(await o.post("/orders",r)).data}catch(c){return console.error("Order API failed, using mock response:",c),console.log("Using mock response:",s),s}}catch(s){if(console.error("Error creating order:",s),s.response)switch(console.error("Error response:",{status:s.response.status,data:s.response.data,headers:s.response.headers}),s.response.status===404&&console.error("API endpoint not found. Check the server configuration and route setup."),s.response.status){case 401:throw(t=(e=s.response.data)==null?void 0:e.message)!=null&&t.includes("expired")?new Error("Session expired. Please log in again."):new Error("Authentication failed. Please log in again.");case 400:throw new Error(((a=s.response.data)==null?void 0:a.message)||"Invalid order data");case 404:throw new Error("Order service is temporarily unavailable. Please try again later.");case 500:throw new Error("Server error occurred. Please try again later.");default:throw new Error(((n=s.response.data)==null?void 0:n.message)||"Failed to create order")}throw s}},g=async(r,e)=>{try{return(await o.put(`/orders/${r}/status`,{status:e})).data}catch(t){throw console.error("Error updating order status:",t),t}},h=async(r="week")=>{try{return(await o.get(`/admin/orders/stats?timeRange=${r}`)).data}catch(e){throw console.error("Error fetching order statistics:",e),e}},w=async r=>{var e,t;try{return(await o.delete(`/orders/${r}`)).data}catch(a){throw new Error(((t=(e=a.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to delete order")}};export{l as a,p as b,u as c,w as d,h as e,i as g,g as u};
